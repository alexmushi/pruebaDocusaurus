"use strict";(self.webpackChunkprueba_docusaurus=self.webpackChunkprueba_docusaurus||[]).push([[526],{164:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>c,default:()=>t,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"presentacion-docusaurus/usar-docusaurus","title":"C\xf3mo utilizar Docusaurus","description":"Docusaurus es una herramienta que podemos utilizar para la documentaci\xf3n, pues tiene control de versiones y una barra de b\xfasqueda global. Usarlo es tan simple como hacer commits a un repo con carpetas y archivos de Markdown.","source":"@site/docs/presentacion-docusaurus/usar-docusaurus.md","sourceDirName":"presentacion-docusaurus","slug":"/presentacion-docusaurus/usar-docusaurus","permalink":"/pruebaDocusaurus/docs/presentacion-docusaurus/usar-docusaurus","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/presentacion-docusaurus/usar-docusaurus.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"C\xf3mo utilizar Markdown","permalink":"/pruebaDocusaurus/docs/presentacion-docusaurus/usar-MD"}}');var r=n(4848),i=n(8453);const o={},c="C\xf3mo utilizar Docusaurus",u={},l=[{value:"Flujo de Trabajo B\xe1sico",id:"flujo-de-trabajo-b\xe1sico",level:2}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"c\xf3mo-utilizar-docusaurus",children:"C\xf3mo utilizar Docusaurus"})}),"\n",(0,r.jsx)(s.p,{children:"Docusaurus es una herramienta que podemos utilizar para la documentaci\xf3n, pues tiene control de versiones y una barra de b\xfasqueda global. Usarlo es tan simple como hacer commits a un repo con carpetas y archivos de Markdown."}),"\n",(0,r.jsx)(s.h2,{id:"flujo-de-trabajo-b\xe1sico",children:"Flujo de Trabajo B\xe1sico"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Lo normal de github, ya se la saben"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Clonar el Repositorio:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"git clone https://github.com/alexmushi/pruebaDocusaurus.git\ncd pruebaDocusaurus\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Crear una branch:"}),"  Probablemente ser\xe1 buena idea crear nuevas branches cada vez que se agregue algo nuevo (substancial), para que haya alguien que cree el documento y alguien que lo revise"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"git checkout -b mi-nueva-caracteristica\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Escribir/Editar Documentaci\xf3n:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Los archivos de documentaci\xf3n est\xe1n en la carpeta ",(0,r.jsx)(s.code,{children:"docs"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Usa Markdown (",(0,r.jsx)(s.code,{children:".md"}),") o MDX (",(0,r.jsx)(s.code,{children:".mdx"})," es para agregar componentes de React)."]}),"\n",(0,r.jsx)(s.li,{children:"Los archivos est\xe1n organizados en carpetas, podemos definir una estructura desde el inicio"}),"\n",(0,r.jsx)(s.li,{children:"Se pueden editar en cualquier IDE, o incluso pueden hacer primero el documento en word si no les gusta el MD y le piden a chat que lo traduzca"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Ver los Cambios Localmente:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"npm start  \n"})}),"\n",(0,r.jsxs)(s.p,{children:["Esto inicia un servidor de desarrollo local (normalmente en ",(0,r.jsx)(s.code,{children:"http://localhost:3000"}),").  Ver\xe1s los cambios en tiempo real mientras editas."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"A\xf1adir, Confirmar y Subir Cambios:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'git add -A\ngit commit -m "Una descripci\xf3n clara de mis cambios"\ngit push origin mi-nueva-caracteristica\n'})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Crear un Pull Request (PR):"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Crea un Pull Request desde tu rama (",(0,r.jsx)(s.code,{children:"mi-nueva-caracteristica"}),") hacia la rama principal (",(0,r.jsx)(s.code,{children:"main"})," o ",(0,r.jsx)(s.code,{children:"master"}),")."]}),"\n",(0,r.jsxs)(s.li,{children:["Describe los cambios en el PR.  ",(0,r.jsx)(s.em,{children:"S\xe9 detallado"}),"."]}),"\n",(0,r.jsx)(s.li,{children:"Solicita revisiones a otros miembros del equipo"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Merge:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Una vez que el PR sea aprobado, un administrador (o t\xfa, si tienes permisos) lo fusionar\xe1 con la rama principal."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Deploy:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Esto queda pendiente... hasta ahorita hemos usado"}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"GIT_USER=(tu_usuario) yarn deploy\n"})}),"\n",(0,r.jsx)(s.p,{children:"pero como queremos hacerlo lo m\xe1s sencillo posible, vamos a automatizarlo para que cada que se apruebe un PR se actualice la p\xe1gina"}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function t(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var a=n(6540);const r={},i=a.createContext(r);function o(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);